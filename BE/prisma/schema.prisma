// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  username  String    @unique
  Comment   Comment[]
  image     Image     @relation(fields: [imageId], references: [id])
  imageId   Int       @unique
  Reply     Reply[]
}

model Image {
  id   Int    @id
  png  String
  webp String

  User User?
}

model Comment {
  // id field that is a number and automatically increments after its used
  id        Int      @id @default(autoincrement())
  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // optional
  content   String?
  published Boolean  @default(false)
  score     Int
  // relation to another model
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
  replies   Reply[]
}

model Reply {
  // id field that is a number and automatically increments after its used
  id         Int      @id @default(autoincrement())
  // timestamps
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  // optional
  content    String?
  published  Boolean  @default(false)
  score      Int
  // relation to another model
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  replyingTo String
  Comment    Comment? @relation(fields: [commentId], references: [id])
  commentId  Int?
}
